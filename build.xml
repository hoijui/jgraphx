<!--
 Copyright (c) 2008 Gaudenz Alder
-->

<!-- ===================== Project Properties =========================== -->

<project name="mxgraph" default="all" basedir="." xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<property name="product.name"        value="JGraph X"/>
	<property name="product.version"     value="4.1.1"/>
	<property name="product.description" value="JGraphX is a Java Swing diagramming (graph visualisation) library licensed under the BSD license"/>
	<property name="all.jar"             value="jgraphx.jar"/>
	<property name="sources.jar"         value="jgraphx-sources.jar"/>
	<property name="javadoc.jar"         value="jgraphx-javadoc.jar"/>

<!-- ===================== Project Environment =========================== -->

	<property name="builddir"       value="${basedir}/target"/>
	<property name="source.home"    value="${basedir}/src"/>
	<property name="example.home"   value="${basedir}/examples"/>

<!-- ==================== Compilation Options ==================== -->

	<property name="compile.debug"       value="false"/>
	<property name="compile.deprecation" value="false"/>
	<property name="compile.optimize"    value="true"/>

<!-- ==================== Maven Options ==================== -->

	<property name="maven.repository.url" value="your_maven_repository_url_here"/> <!-- TODO Fill in! -->
	<property name="maven.repository.id"  value="your_maven_repository_id_here"/> <!-- TODO Fill in! -->

<!-- ==================== All ==================== -->

	<target name="all" depends="build"
		description="Clean up and build the project"/>

<!-- ==================== Clean ==================== -->

	<target name="clean" description="Deletes all generated files and directories">
		<delete dir="${builddir}"/>
	</target>

<!-- ==================== Init ==================== -->

	<target name="init" description="Initializes the build">
		<tstamp/>
		<mkdir dir="${builddir}/classes"/>
		<mkdir dir="${builddir}/docs"/>
		<mkdir dir="${builddir}/docs/api"/>
		<mkdir dir="${builddir}/docs/manual"/>
		<mkdir dir="${builddir}"/>
	</target>

<!-- ==================== Compile ==================== -->

	<target name="compile" depends="init" description="Compiles the source tree">
		<javac srcdir="${source.home}"
			debug="${compile.debug}"
			deprecation="${compile.deprecation}"
			optimize="${compile.optimize}"
			destdir="${builddir}/classes">
			<classpath>
				<pathelement path="${builddir}/classes"/>
			</classpath>
		</javac>
	</target>

<!-- ==================== Doc ==================== -->

	<target name="doc" depends="compile" description="Generates the API specification (javadoc)">
		<javadoc packagenames="com.mxgraph.*"
				 sourcepath="${source.home}"
				 classpath="${builddir}/classes"
				 destdir="${builddir}/docs/api"
				 use="true"
				 author="false"
				 version="false"
				 windowtitle="${product.name} ${product.version} API Specification"
				 doctitle="${product.name} ${product.version} API Specification">
			<header><![CDATA[<p><b>${product.name} ${product.version}</b></p>]]></header>
			<bottom><![CDATA[<font size=1>Copyright (c) 2010 <a href="http://www.mxgraph.com/"
				target="_blank">Gaudenz Alder</a>. All rights reserved.</font>]]></bottom>
			<link href="http://download.oracle.com/javase/1.5.0/docs/api/"/>
		</javadoc>
		<copy todir="${builddir}/docs/manual">
			<fileset dir="docs/manual"/>
		</copy>
	</target>

<!-- ==================== Build ==================== -->

	<target name="build" depends="doc" description="Builds all Java archives (JARs)">
		<jar jarfile="${builddir}/${all.jar}">
			<manifest>
				<attribute name="Vendor" value="JGraph Ltd"/>
				<attribute name="Bundle-Version" value="${product.version}"/>
				<attribute name="Bundle-SymbolicName" value="com.mxgraph"/>
				<attribute name="Main-Class" value="com.mxgraph.view.mxGraph"/>
			</manifest>
			<fileset dir="${source.home}">
				<exclude name="**/*.java"/>
			</fileset>
			<fileset dir="${builddir}/classes">
				<include name="com/mxgraph/**"/>
			</fileset>
		</jar>
		<delete dir="${builddir}/classes"/>
	</target>

<!-- ==================== Maven ==================== -->

	<target name="create-pom" description="Creates pom.xml for jgraphx project">
		<artifact:pom file="pom.xml" id="pom"
			groupId="com.jgraph"
			artifactId="jgraphx"
			version="${product.version}"
			name="${product.name}"
			description="${product.description}">
			<organization name="jgraph" url="http://www.jgraph.com"/>
			<scm url="scm:git:https://github.com/jgraph/jgraphx"/>
			<license name="bsd" url="https://github.com/jgraph/jgraphx/blob/master/license.txt"/>
		</artifact:pom>
		<artifact:writepom pomrefid="pom" file="pom.xml"/>
	</target>

	<target name="maven-jar" description="Creates sources and javadoc jar files">
		<jar jarfile="${builddir}/${sources.jar}">
			<fileset dir="${source.home}"/>
		</jar>
		<jar jarfile="${builddir}/${javadoc.jar}">
			<fileset dir="${builddir}/docs/api"/>
		</jar>
	</target>

	<target name="maven-install" depends="create-pom, maven-jar" description="Install artifacts to maven local repository">
		<artifact:install file="${builddir}/${all.jar}">
			<artifact:pom refid="pom"/>
			<attach type="jar" file="${builddir}/${sources.jar}" classifier="sources"/>
			<attach type="jar" file="${builddir}/${javadoc.jar}" classifier="javadoc"/>
		</artifact:install>
	</target>

	<target name="maven-deploy" depends="create-pom, maven-jar" description="Deploy artifacts to maven repository">
		<artifact:deploy file="${builddir}/${all.jar}">
			<artifact:pom refid="pom"/>
			<remoterepository url="${maven.repository.url}" id="${maven.repository.id}"/>
			<attach type="jar" file="${builddir}/${sources.jar}" classifier="sources"/>
			<attach type="jar" file="${builddir}/${javadoc.jar}" classifier="javadoc"/>
		</artifact:deploy>
	</target>

<!-- ==================== Example ==================== -->

	<target name="example" depends="build" description="Compiles the examples">
		<javac srcdir="${example.home}" debug="${compile.debug}" deprecation="${compile.deprecation}"
			optimize="${compile.optimize}" destdir="${example.home}">
			<classpath>
				<pathelement path="${builddir}/${all.jar}"/>
			</classpath>
		</javac>
	</target>

<!-- ==================== Editor ==================== -->

	<target name="editor" depends="example" description="Runs the graph editor example">
		<java fork="true" classname="com.mxgraph.examples.swing.GraphEditor">
			<classpath>
				<pathelement path="${example.home}"/>
				<pathelement path="${builddir}/${all.jar}"/>
			</classpath>
		</java>
	</target>

</project>
